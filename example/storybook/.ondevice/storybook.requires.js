/* do not change this file, it is auto generated by storybook. */

import {
  configure,
  addDecorator,
  addParameters,
  addArgsEnhancer,
  clearDecorators,
} from '@storybook/react-native';

import '@storybook/addon-ondevice-notes/register';
import '@storybook/addon-ondevice-controls/register';
import '@storybook/addon-ondevice-backgrounds/register';
import '@storybook/addon-ondevice-actions/register';

import { argsEnhancers } from '@storybook/addon-actions/dist/modern/preset/addArgs';

import { decorators, parameters } from './preview';

if (decorators) {
  if (__DEV__) {
    // stops the warning from showing on every HMR
    require('react-native').LogBox.ignoreLogs([
      '`clearDecorators` is deprecated and will be removed in Storybook 7.0',
    ]);
  }
  // workaround for global decorators getting infinitely applied on HMR, see https://github.com/storybookjs/react-native/issues/185
  clearDecorators();
  decorators.forEach((decorator) => addDecorator(decorator));
}

if (parameters) {
  addParameters(parameters);
}

try {
  argsEnhancers.forEach((enhancer) => addArgsEnhancer(enhancer));
} catch {}

const getStories = () => {
  return [
    require('../src_old/components/Actionsheet/Actionsheet.stories.tsx'),
    require('../src_old/components/AlertDialog/AlertDialog.stories.tsx'),
    require('../src_old/components/Avatar/Avatar.stories.tsx'),
    require('../src_old/components/Button/Button.stories.tsx'),
    require('../src_old/components/ButtonGroup/ButtonGroup.stories.tsx'),
    require('../src_old/components/Checkbox/Checkbox.stories.tsx'),
    require('../src_old/components/Divider/Divider.stories.tsx'),
    require('../src_old/components/Fab/Fab.stories.tsx'),
    require('../src_old/components/FormControl/FormControl.stories.tsx'),
    require('../src_old/components/HStack/HStack.stories.tsx'),
    require('../src_old/components/Icon/Icon.stories.tsx'),
    require('../src_old/components/IconButton/IconButton.stories.tsx'),
    require('../src_old/components/Input/Input.stories.tsx'),
    require('../src_old/components/InputGroup/InputGroup.stories.tsx'),
    require('../src_old/components/Link/Link.stories.tsx'),
    require('../src_old/components/Menu/Menu.stories.tsx'),
    require('../src_old/components/Modal/Modal.stories.tsx'),
    require('../src_old/components/Overlay/Overlay.stories.tsx'),
    require('../src_old/components/Popover/Popover.stories.tsx'),
    require('../src_old/components/Pressable/Pressable.stories.tsx'),
    require('../src_old/components/Progress/Progress.stories.tsx'),
    require('../src_old/components/Radio/Radio.stories.tsx'),
    require('../src_old/components/Stack/Stack.stories.tsx'),
    require('../src_old/components/Select/Select.stories.tsx'),
    require('../src_old/components/Slider/Slider.stories.tsx'),
    require('../src_old/components/Spinner/Spinner.stories.tsx'),
    require('../src_old/components/Switch/Switch.stories.tsx'),
    require('../src_old/components/TextArea/TextArea.stories.tsx'),
    require('../src_old/components/Toast/Toast.stories.tsx'),
    require('../src_old/components/Tooltip/Tooltip.stories.tsx'),
    require('../src_old/components/Transitions/Transitions.stories.tsx'),
    require('../src_old/components/VStack/VStack.stories.tsx'),
    require('../src_old/components/Tabs/Tabs.stories.tsx'),
  ];
};

configure(getStories, module, false);
